# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Build the app and publish it to Testflight

on:
  release:
    types:
      - created
  workflow_dispatch:

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
      - uses: expo/expo-github-action@7.0.3
        with:
          expo-version: 4.x
          expo-cache: true
      - name: Install dependencies with Yarn
        run: yarn
      - name: Run expo doctor to verify the project is valid
        run: expo doctor
      - name: Run tests
        run: yarn test
  ios:
    runs-on: macos-11
    name: Build for iOS
    needs: ci
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3.0.0
        with:
          node-version: 14
      - name: Install expo-cli
        run: npm i -g expo-cli
      - name: Authenthicate with the expo-cli
        run: expo login -u ${{ secrets.EXPO_CLI_USERNAME }} -p ${{ secrets.EXPO_CLI_PASSWORD }}
      - name: Install dependencies with Yarn
        run: yarn
      - name: Build the app for iOS
        run: yarn run build:ios
      - name: Download the latest .ipa
        run: wget -O iclip.ipa $(expo url:ipa --non-interactive)
      - name: Release the .ipa to App Store connect
        run: xcrun altool --upload-app -f iclip.ipa -u ${{ secrets.APPLE_ID_EMAIL }} -p ${{ secrets.APPLE_ID_PASSWORD }}
  android:
    runs-on: ubuntu-latest
    name: Build for Android
    needs: ci
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3.0.0
        with:
          node-version: 14
      - name: Install expo-cli
        run: npm i -g expo-cli
      - name: Authenthicate with the expo-cli
        run: expo login -u ${{ secrets.EXPO_CLI_USERNAME }} -p ${{ secrets.EXPO_CLI_PASSWORD }}
      - name: Install dependencies with Yarn
        run: yarn
      - name: Build the app for Android
        run: |
          yarn run build:android
      - name: Download the app from Expo
        run: wget -O iclip.aab $(expo url:apk --non-interactive)
      - name: Upload the .aab as an action artifact
        uses: actions/upload-artifact@v2
        with:
          name: android
          path: iclip.aab
